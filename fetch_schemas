#!/usr/bin/env bash

set -e

# resolve actual path of this script, even if symlinked
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do
  DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
SCRIPT_DIR="$(cd -P "$(dirname "$SOURCE")" >/dev/null 2>&1 && pwd)"

# target dir is inside the current project, e.g. ./external/qase-specs
TARGET_DIR="${SCRIPT_DIR}/external/qase-specs"

if [ -d "$TARGET_DIR" ]; then
  echo "âœ… Schemas already fetched at $TARGET_DIR"
else
  echo "ðŸ“¥ Cloning Qase schema repo..."
  git clone --depth 1 https://github.com/qase-tms/specs.git "$TARGET_DIR"
  echo "âœ… Qase schemas are now available under $TARGET_DIR/report/schemas/"
fi

SCHEMA_DIR="${SCRIPT_DIR}/schemas"
MODEL_DIR="${SCHEMA_DIR}/models"

mkdir -p "$MODEL_DIR"

convert_and_fix() {
  local source_yaml="$1"
  local target_json="$2"

  yq -o=json "$source_yaml" > "$target_json.tmp"
  node "${SCRIPT_DIR}/fix-schema.js" "$target_json.tmp" "$target_json"
  rm "$target_json.tmp"
}

convert_and_fix external/qase-specs/report/schemas/root.yaml "$SCHEMA_DIR/root.json"
convert_and_fix external/qase-specs/report/schemas/result.yaml "$SCHEMA_DIR/result.json"
convert_and_fix external/qase-specs/report/schemas/models/attachment.yaml "$MODEL_DIR/attachment.json"
convert_and_fix external/qase-specs/report/schemas/models/step.yaml "$MODEL_DIR/step.json"
